buildscript {
    ext {
        springBootVersion = '1.5.9.RELEASE'
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('com.bmuschko:gradle-docker-plugin:3.0.11')
    }
}

repositories {
    mavenCentral()
    jcenter()
    flatDir {
        dirs 'lib'
    }
}

apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.bmuschko.docker-remote-api'


project.webAppDirName = 'public_html'

group = 'com.gewaukesha.lifecycle'
version = '1.0.0'

description = """"""

sourceCompatibility = 1.8
targetCompatibility = 1.8

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

processResources {
    ['banner.txt'].each { filesMatching(it) { filter ReplaceTokens, tokens: ["app.version": "testinga awouefhawuioeghouawrhgoarwhgohiarw"] } }
}


bootRun.ext.activeProfiles = 'prod'
bootRun {
	addResources = true
    doFirst {
        jvmArgs = ["-Dspring.profiles.active=" + ext.activeProfiles]
    }
}

task local { doFirst { bootRun.ext.activeProfiles = "dev" } }
task staging { doFirst { bootRun.ext.activeProfiles = "staging" } }

configurations {
    compile.exclude module: "spring-boot-starter-tomcat"
}


bootRepackage {
    mainClass = 'com.gewaukesha.lifecycle.LifeCycleApplication'
}

dependencies {

           
    compile('org.springframework.boot:spring-boot-starter-web:1.5.9.RELEASE')
    compile("org.springframework.boot:spring-boot-starter-jetty:1.5.9.RELEASE")
    compile('org.springframework.boot:spring-boot-starter-cache:1.5.9.RELEASE')
    compile('org.springframework.boot:spring-boot-starter-data-jpa:1.5.9.RELEASE')
    compile('org.springframework.boot:spring-boot-starter-actuator:1.5.9.RELEASE')
    compile "org.flywaydb:flyway-core:5.0.2"
    
    compile('mysql:mysql-connector-java:5.1.40')
    compile('io.springfox:springfox-swagger2:2.7.0')
    compile('io.springfox:springfox-swagger-ui:2.7.0')
    
	// https://mvnrepository.com/artifact/org.hibernate/hibernate-gradle-plugin
	compile group: 'org.hibernate', name: 'hibernate-gradle-plugin', version: '5.1.1.Final'
	
	// https://mvnrepository.com/artifact/org.hibernate/hibernate-core
	compile group: 'org.hibernate', name: 'hibernate-core', version: '5.1.1.Final'
	
	compile group: 'org.apache.commons', name: 'commons-lang3', version:'3.7'

	
	
    // miscellaneous
    compile('ch.qos.logback:logback-access')
    compile('commons-io:commons-io:2.6')
    compile('commons-collections:commons-collections:3.2.1')
    compile('com.auth0:java-jwt:3.0.1')


    // testing
    testCompile('org.springframework.boot:spring-boot-starter-test:1.5.9.RELEASE')
}

import org.apache.tools.ant.filters.ReplaceTokens

processResources {
    ['banner.txt'].each { filesMatching(it) { filter ReplaceTokens, tokens: ["app.version": rootProject.version] } }
}

sourceSets {
    main {
        java {
            srcDirs 'src/main/java'
        }
	resources {
            srcDirs 'src'
            includes = ["**/*.txt","**/*.properties","**/*.xml","**/*.ftl","**/*.json"]
        }
    }


}

task wrapper(type: Wrapper) {
    gradleVersion = '4.4'
}

/*
 * docker related config
 */
import com.bmuschko.gradle.docker.tasks.image.Dockerfile
import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage
import com.bmuschko.gradle.docker.tasks.image.DockerPushImage

def tagname = jar.baseName + "_" + version
def repo = "myplantrepo/images"
def image = repo + ":" + tagname
def imageRelease = repo + ":" + tagname

docker {
    url = 'http://localhost:2375'
    registryCredentials {
        url = 'https://index.docker.io/v1/'
        username = 'myplantrepo'
        password = 'sTs9B=zFGXNBH?ym'
    }
}

task dockerCreate(type: Dockerfile, dependsOn: build) {
    doFirst {
        copy {
            from jar
            into "build/docker/"
        }
    }

    destFile = project.file('build/docker/Dockerfile')
    from 'frolvlad/alpine-oraclejdk8:slim'
    volume '/tmp'
    addFile jar.archiveName, "/app.jar"
    entryPoint "java", "-Xmx900m", "-Djava.net.preferIPv4Stack=true", "-jar", "/app.jar"
    maintainer 'Alexander Rosemann "alexander.rosemann@ge.com"'
}

task dockerBuild(type: DockerBuildImage, dependsOn: dockerCreate) {
    inputDir = dockerCreate.destFile.parentFile
    tag = image
}

task dockerPush(type: DockerPushImage, dependsOn: dockerBuild) {
    imageName = image
}

task dockerBuildRelease(type: DockerBuildImage, dependsOn: dockerCreate) {
    inputDir = dockerCreate.destFile.parentFile
    tag = imageRelease
}

task dockerPushRelease(type: DockerPushImage, dependsOn: dockerBuildRelease) {
    imageName = imageRelease
}
apply plugin: 'eclipse'
